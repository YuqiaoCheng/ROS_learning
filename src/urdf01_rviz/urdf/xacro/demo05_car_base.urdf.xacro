<robot name = "mycar" xmlns:xacro = "http://wiki.ros.org/xacro">

    <xacro:property name= "footprint_radius" value = "0.001"/>

    <link name="base_footprint">
        <visual>
            <geometry>
                <sphere radius ="${footprint_radius}"/>
            </geometry>
        </visual>
    </link>

    <!-- 2. 添加底盘 -->
    <!-- 圆柱 ，半径10cm 高度 0.08m  里地间距 0.015m  -->
    <!-- 2.1 link -->
    <xacro:property name= "base_radius" value ="0.1"/>
    <xacro:property name= "base_length" value ="0.08"/>
    <xacro:property name= "lidi" value ="0.015"/>
    <xacro:property name= "base_joint_z" value ="${base_length/2 + lidi}"/>

    <link name = "base_link">
        <visual>
            <geometry>
                <cylinder radius="${base_radius}" length ="${base_length}" />
            </geometry>
            <origin xyz ="0 0 0" rpy= "0 0 0" />
            <material name = "baselink_color">
                <color rgba = "1.0 0.5 0.2 0.5" />
            </material>
        </visual>
    </link>
    <!-- 2.2 joint -->
    <joint name ="link2footprint" type ="fixed">
        <parent link = "base_footprint"/>
        <child link = "base_link"/>
        <!-- z轴计算  车体高度一半 + 离地间距 -->
        <origin xyz ="0 0 ${base_joint_z}" rpy= "0 0 0" />
    </joint>
    <!-- 驱动轮的参数封装 -->
    <xacro:property name= "wheel_radius" value ="0.0325"/>
    <xacro:property name= "wheel_length" value ="0.015"/>
    <xacro:property name= "PI" value ="3.1415927"/>
    <!-- 结果是负数 -->
    <xacro:property name= "wheel_joint_z" value ="${-(base_length/2 +lidi - wheel_radius)}"/>

    <!-- 驱动轮 宏的封装 -->

    <!-- flag  左 1   右 -1  -->
    <xacro:macro name = "wheel_func" params ="wheel_name flag">
        <!-- 驱动轮 -->
        <!-- 3.1 link -->
        <link name = "${wheel_name}_wheel">
            <visual>
                <geometry>
                    <cylinder radius="${wheel_radius}" length ="${wheel_length}" />
                </geometry>
                <origin xyz ="0 0 0" rpy= "${PI/2} 0 0" />
                <material name = "wheel_color">
                    <color rgba = "0 0 0 0.8" />
                </material>
            </visual>
        </link>

        <!-- 3.2 joint -->
        <joint name ="${wheel_name}2link" type ="continuous">
            <parent link = "base_link"/>
            <child link = "${wheel_name}_wheel"/>
    <!--  x , y 无偏移  z = 0.04+0.015-0.0325 = 0.0225 
        z 等于车体高度/2 +离地间隙 -车轮半径-->
            <origin xyz ="0 ${flag *0.1} ${wheel_joint_z}" rpy= "0 0 0" />

            <axi xyz = "0 1 0 "/>
        </joint>
    </xacro:macro>

    <!-- 宏一定要调用才有用 -->
    <xacro:wheel_func wheel_name ="left" flag = "1"/>
    <xacro:wheel_func wheel_name ="right" flag = "-1"/>

    <!-- 万向轮 -->
    <!-- 球形  半径0.0075m -->
    <xacro:property name="small_wheel_radius" value= "0.0075" />
    <xacro:property name="small_joint_z" value= "${-(base_length/2 + lidi - small_wheel_radius)}" />
    <xacro:property name="small_wheel_x" value = "0.08"/>
    <xacro:macro name= "small_wheel_func" params= "small_wheel_name flag">
        <link name = "${small_wheel_name}_wheel">
            <visual>
                <geometry>
                    <sphere radius="${small_wheel_radius}" />
                </geometry>
                <origin xyz ="0 0 0" rpy= "0 0 0" />
                <material name = "wheel_color">
                    <color rgba = "0 0 0 0.8" />
                </material>
            </visual>
            <!-- back wheel -->
        </link>

        <joint name ="${small_wheel_name}2link" type ="continuous">
            <parent link = "base_link"/>
            <child link = "${small_wheel_name}_wheel"/>
        <!--  x , y 无偏移  z = 0.04+0.015-0.0325 = 0.0225 
        z 等于车体高度/2 +离地间隙 -车轮半径-->
            <origin xyz ="${flag* small_wheel_x} 0 ${small_joint_z}" rpy= "0 0 0" />

            <axi xyz = "0 1 0 "/>
        </joint>
    </xacro:macro >
    <xacro:small_wheel_func small_wheel_name ="front" flag="1"/>
    <xacro:small_wheel_func small_wheel_name ="back" flag="-1"/>
</robot>